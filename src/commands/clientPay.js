// ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ PAY buttons & compatibility ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
const axios = require("axios");
const { Markup } = require("telegraf");
const logger = require("../logger");

const card = "2202 2006 1234 5678";
const MODE = "openrouter/auto";

// ‚Äî –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã —á–µ–∫ ‚Üí –∞–¥–º–∏–Ω
function payMsg(what) {
  return (
    `üí≥ –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å *${what}*, –ø–µ—Ä–µ–≤–µ–¥–∏—Ç–µ 10 ‚ÇΩ –Ω–∞ –∫–∞—Ä—Ç—É:\n\n${card}\n\n` +
    "–ü–æ—Ç–æ–º –ø—Ä–∏—à–ª–∏—Ç–µ —Å—é–¥–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç –∏–ª–∏ —á–µ–∫ üëá"
  );
}

module.exports = (bot) => {
  // –∫–Ω–æ–ø–∫–∏ –æ–ø–ª–∞—Ç—ã
  bot.action("love_start", async (c) => {
    await c.answerCbQuery();
    c.reply(payMsg("–∞–Ω–∞–ª–∏–∑ –ª—é–±–≤–∏"), { parse_mode: "Markdown" });
  });
  bot.action("career_start", async (c) => {
    await c.answerCbQuery();
    c.reply(payMsg("–∫–∞—Ä—å–µ—Ä–Ω—ã–π –ø—Ä–æ–≥–Ω–æ–∑"), { parse_mode: "Markdown" });
  });
  bot.action("compat_start", async (c) => {
    await c.answerCbQuery();
    c.reply(payMsg("–∞–Ω–∞–ª–∏–∑ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏"), { parse_mode: "Markdown" });
  });

  // —á–µ–∫
  bot.on(["photo", "document"], async (ctx) => {
    await ctx.reply("üì© –ß–µ–∫ –ø—Ä–∏–Ω—è—Ç! –û—Ç–∫—Ä–æ—é –¥–æ—Å—Ç—É–ø –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.");
    await ctx.forwardMessage(process.env.ADMIN_ID);
    await bot.telegram.sendMessage(
      process.env.ADMIN_ID,
      `üßæ –ß–µ–∫ –æ—Ç @${ctx.from.username || "anon"} (ID:${ctx.from.id})`,
      Markup.inlineKeyboard([
        [
          Markup.button.callback("‚úîÔ∏è –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", `grant_ok_${ctx.from.id}`),
          Markup.button.callback("‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", `grant_no_${ctx.from.id}`),
        ],
      ])
    );
  });

  // ‚Äî —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å (–¥–≤–µ –∫–∞—Ä—Ç—ã)
  const dualReg =
    /^\s*(\d{2}\.\d{2}\.\d{4}\s+\d{2}:\d{2}\s+.+?)\s*&\s*(\d{2}\.\d{2}\.\d{4}\s+\d{2}:\d{2}\s+.+)$/;

  bot.hears(dualReg, async (ctx) => {
    const [, a, b] = ctx.message.text.match(dualReg);
    const t0 = Date.now(),
      u = ctx.from.username || ctx.from.id;
    logger.info(`[compat-req] @${u}`);

    await ctx.reply("üíû –°–≤–µ—Ä—è—é –∑–≤—ë–∑–¥–Ω—ã–µ –ø–∞—Å–ø–æ—Ä—Ç–∞ –ø–∞—Ä—ã‚Ä¶");

    const prompt = `–¢—ã –æ–ø—ã—Ç–Ω—ã–π –∞—Å—Ç—Ä–æ–ª–æ–≥. –°–¥–µ–ª–∞–π –∞–Ω–∞–ª–∏–∑ *—Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏* –ø–∞—Ä—ã –ø–æ –ø—è—Ç–∏ –±–ª–æ–∫–∞–º (–∫–∞–∂–¥—ã–π ‚â§3 —Å—Ç—Ä–æ–∫–∏).

1. üåü –û–±—â–µ–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ –ø–∞—Ä—ã  
2. üíó –≠–º–æ—Ü–∏–∏ –∏ –±—ã—Ç  
3. üî• –ò–Ω—Ç–∏–º / —Å—Ç—Ä–∞—Å—Ç—å  
4. ü§ù –ö–æ–Ω—Ñ–ª–∏–∫—Ç—ã –∏ —Ä–æ—Å—Ç  
5. ‚ú® –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª –Ω–∞ –≥–æ–¥ –≤–ø–µ—Ä—ë–¥  

–°—Ç–∏–ª—å: –¥—Ä—É–∂–µ–ª—é–±–Ω–æ, –ø–æ-–¥–µ–ª—É, —Å–º–∞–π–ª–∏–∫–∏ –º–æ–∂–Ω–æ. Markdown –∏ —Å–ø–∏—Å–∫–∏ –Ω–µ –Ω—É–∂–Ω—ã.
–î–∞–Ω–Ω—ã–µ:
‚Ä¢ –ü–∞—Ä—Ç–Ω—ë—Ä A: ${a}
‚Ä¢ –ü–∞—Ä—Ç–Ω—ë—Ä B: ${b}`;

    try {
      const { data } = await axios.post(
        "https://openrouter.ai/api/v1/chat/completions",
        {
          model: MODE,
          messages: [
            {
              role: "system",
              content: "–û—Ç–≤–µ—á–∞–π —Ç–æ–ª—å–∫–æ –ø–æ —à–∞–±–ª–æ–Ω—É 1-5, –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Ç–µ–º.",
            },
            { role: "user", content: prompt },
          ],
        },
        {
          headers: {
            Authorization: `Bearer ${process.env.OPENROUTER_API_KEY}`,
            "Content-Type": "application/json",
          },
        }
      );
      await ctx.reply(
        data.choices?.[0]?.message?.content?.trim() ||
          "üåå –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –Ω–µ —á–∏—Ç–∞–µ—Ç—Å—è, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ"
      );
      logger.info(`[compat-ok ] @${u}|${Date.now() - t0}–º—Å`);
    } catch (e) {
      logger.error(`[compat-fail] ${e.message}`);
      ctx.reply("üõ†Ô∏è –ù–µ –≤—ã—à–ª–æ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–¥–Ω–µ–µ.");
    }
  });
};

// // –ø–ª–∞—Ç–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è ¬´–°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å¬ª

// const { Markup } = require("telegraf");

// module.exports = (bot) => {
//   // –∫–Ω–æ–ø–∫–∞ ¬´–°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å (–ø–ª–∞—Ç–Ω–æ)¬ª –∏–∑ –º–µ–Ω—é
//   bot.action("compat_start", async (ctx) => {
//     await ctx.answerCbQuery();
//     ctx.reply(
//       "üí≥ –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ –æ—Ç–ø—Ä–∞–≤—å 10 ‚ÇΩ –Ω–∞ –∫–∞—Ä—Ç—É:\n\n" +
//         "2202 2006 1234 5678\n\n" +
//         "–ó–∞—Ç–µ–º –ø—Ä–∏—à–ª–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç –∏–ª–∏ —á–µ–∫ —Å—é–¥–∞ üëá"
//     );
//   });

//   // /compat ‚Äî –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–±—Ä–∞–ª –≤—Ä—É—á–Ω—É—é
//   bot.command("compat", (ctx) => {
//     ctx.reply(
//       "üí≥ –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ –æ—Ç–ø—Ä–∞–≤—å 10 ‚ÇΩ –Ω–∞ –∫–∞—Ä—Ç—É:\n\n" +
//         "2202 2006 1234 5678\n\n" +
//         "–ó–∞—Ç–µ–º –ø—Ä–∏—à–ª–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç –∏–ª–∏ —á–µ–∫ —Å—é–¥–∞ üëá"
//     );
//   });

//   // –ø—Ä–∏—ë–º —á–µ–∫–æ–≤ (—Ñ–æ—Ç–æ/–¥–æ–∫)
//   bot.on(["photo", "document"], async (ctx) => {
//     const user = ctx.from;

//     // —Å–æ–æ–±—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
//     await ctx.reply(
//       "üì© –ß–µ–∫ –ø–æ–ª—É—á–µ–Ω! –ü—Ä–æ–≤–µ—Ä—é –∏ –¥–∞–º –∑–Ω–∞—Ç—å, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –æ–ø–ª–∞—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—Å—è."
//     );

//     // –ø–µ—Ä–µ—Å—ã–ª–∞–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É –∞–¥–º–∏–Ω—É
//     const fwdMsg = await ctx.forwardMessage(process.env.ADMIN_ID);

//     // –ø–æ–¥ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º ‚Äî –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω–∞
//     await bot.telegram.sendMessage(
//       process.env.ADMIN_ID,
//       `üßæ –ß–µ–∫ –æ—Ç @${user.username || "–Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω"} (ID: ${user.id})`,
//       Markup.inlineKeyboard([
//         Markup.button.callback("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ", `grant_ok_${user.id}`),
//         Markup.button.callback("‚ùå –ù–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ", `grant_no_${user.id}`),
//       ])
//     );
//   });
// };
